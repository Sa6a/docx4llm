[project]
name = "docx4llm"
version = "0.2.0"
description = "library for converting DOCX files to formats suitable for LLM processing"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "lxml>=5.3.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/docx4llm"]

[project.scripts]
docx-num-converter = "docx4llm.cli:main_cli"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.7",
    "wemake-python-styleguide>=1.1.0",
]

[tool.black]
line-length = 80
preview = true
skip-string-normalization = true # we use '
target-version = [ 'py312' ]
# Exclude intentionally bad files:
extend-exclude = '''
(
  tests/.*/__snapshots__/.* | tests/fixtures/.*
)
'''

[tool.ruff]
# Ruff config: https://docs.astral.sh/ruff/settings
preview = true
fix = true
target-version = "py312"
extend-exclude = [
  # Intentionally bad code:
  "tests/**/__snapshots__/**",
  "tests/fixtures/**",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]